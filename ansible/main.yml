###Esse playbook é de teste para as tasks do Cluster Kubernetes.
# Irei criar a estrutura de pastas do Ansible
# Criar roles para deixar o playbook mais flexível 
# Criar pasta de variveis 
---
- hosts: master
  
  # Versões dos pacotes usados no setup do Cluster
  vars:
  - kubeadm_version: kubeadm-1.9.3-0.x86_64
  - kubectl_version: kubectl-1.9.3-0.x86_64
  - kubelet_version: kubelet-1.9.3-0.x86_64
  - flannel_url: https://raw.githubusercontent.com/coreos/flannel/v0.10.0/Documentation/kube-flannel.yml
  
  user: root
  become: yes

  tasks:

   - name: ping em todos os nodes
     ping: 

   - name: Create kubernetes yum repository
     yum_repository:
       name: kubernetes
       description: Kubernetes
       baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
       gpgcheck: no

   - name: Disable selinux
     selinux: policy=targeted state=permissive

   - name: Clean Yum metadata
     command: yum clean all
     args:
       warn: no

   - name: Remove swapfile /etc/fstab
     mount:
       name: swap
       fstype: swap
       state: absent

   - name: Disable swap
     command: swapoff -a
     when: ansible_swaptotal_mb > 0

   # Instala pacotes e dependencias para kubernetes
   - name: Install Packages Kubernetes
     yum: name={{ item }} state=installed
     with_items:
     - ntp 
     - docker
     - "{{ kubeadm_version }}"
     - "{{ kubectl_version }}"
     - "{{ kubelet_version }}"
     #- kubernetes-cni
     tags:
        - kubernetes
   
   # Configurações Globais do SO
   - name: Configurando timezone
     command: timedatectl set-timezone America/Sao_Paulo 

   - name: stop ntpd service
     service: name=ntpd state=stopped

   - name: Sincronizando a hora
     command: ntpd -gq
     ignore_errors: yes

   - name: start ntpd service
     service: name=ntpd state=restarted enabled=yes 

   - name: Stop and disable firewalld.
     service: name=firewalld state=stopped enabled=false
        
  # Certificados para conexão com repo caso necessário
   - name: Copia certificados para host
     copy:
        src: rootca.crt
        dest: /etc/pki/ca-trust/source/anchors/  
  
   - name: Instala certificados
     command: update-ca-trust exported
   
   # Caso exista manifesto do cluster remove
   - name: Reset any existing cluster
     command: /usr/bin/kubeadm reset

   - name: Enable and start docker
     systemd: state=started enabled=yes name=docker

   - name: Enable and start kubelet
     systemd: state=started enabled=yes name=kubelet

# Login no Registry
#   - name: Docker Login Private Registry 
#     docker_login:
       #registry: url.repo.com
       #username: yourself
#       password: secrets3
       #reauthorize: yes

#   - name: Generate cluster token
#     command: /usr/bin/kubeadm token generate
#     register: kubeadm_token_generate
#     when: kubeadm_token is not defined
#   - set_fact: kubeadm_token={{ kubeadm_token_generate.stdout }}
#     when: kubeadm_token is not defined
   
   - name: flannel to work correctly
     command: sysctl net.bridge.bridge-nf-call-iptables=1
   
   # Essa etapa é executada caso o nó seja o Master, criar role para Master/Worker

   - name: Inicializa o cluster
     command: /usr/bin/kubeadm init --pod-network-cidr 10.244.0.0/16 # --token {{ kubeadm_token }}
   
   
   - name: Acesso root ao kubectl
     shell: mkdir -p $HOME/.kube && \
              cp -rf /etc/kubernetes/admin.conf $HOME/.kube/config && \
              chown $(id -u):$(id -g) $HOME/.kube/config 

   - name: Cria a Rede do Cluster 
     command: /usr/bin/kubectl apply -f {{ flannel_url }} -n kube-system
     
     environment:
      KUBECONFIG: /etc/kubernetes/admin.conf
   
   # Listar todos os nós do Cluster
   - name: Get Nodes
     command: /usr/bin/kubectl get nodes 

   # Apenas para testes
   - name: Habilitar Master /p rodar pods
     command: kubectl taint nodes --all node-role.kubernetes.io/master- 

   - name: deploy test
     shell: kubectl apply -f https://raw.githubusercontent.com/concrete-cristian-trucco/aplicacao-12-fatores/master/deployment-all.yaml
     environment:
       KUBECONFIG: /etc/kubernetes/admin.conf
   
